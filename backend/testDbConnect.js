require('dotenv').config();
const { Pool } = require('pg');

async function testConnection() {
  console.log('üîç Testando conex√£o com PostgreSQL...');
  console.log('Configura√ß√£o:', {
    connectionString: process.env.DATABASE_URL,
  });

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

  try {
    const client = await pool.connect();
    console.log('‚úÖ Conex√£o bem-sucedida!');
    
    // Testar algumas queries b√°sicas
    const versionResult = await client.query('SELECT version()');
    console.log('üìã Vers√£o do PostgreSQL:', versionResult.rows[0].version);
    
    const databasesResult = await client.query(`
      SELECT datname FROM pg_database 
      WHERE datistemplate = false
    `);
    console.log('üóÉÔ∏è Bancos de dados dispon√≠veis:');
    databasesResult.rows.forEach(db => console.log('  -', db.datname));
    
    client.release();
    await pool.end();
    
  } catch (error) {
    console.error('‚ùå Erro de conex√£o:', error.message);
    console.log('\nüîß Solu√ß√µes poss√≠veis:');
    console.log('1. Verifique se o PostgreSQL est√° instalado e rodando');
    console.log('2. Confirme as credenciais no arquivo .env');
    console.log('3. Verifique se o banco de dados existe');
    console.log('4. Confirme as permiss√µes do usu√°rio');
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Dica: O PostgreSQL pode n√£o estar rodando na porta 5432');
    }
    
    if (error.code === '28P01') {
      console.log('\nüí° Dica: Senha incorreta ou usu√°rio n√£o existe');
    }
    
    if (error.code === '3D000') {
      console.log('\nüí° Dica: Banco de dados n√£o existe');
    }
  }
}

testConnection();